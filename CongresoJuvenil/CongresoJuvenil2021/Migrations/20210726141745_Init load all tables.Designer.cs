// <auto-generated />
using System;
using CongresoJuvenil2021.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CongresoJuvenil2021.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210726141745_Init load all tables")]
    partial class Initloadalltables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CongresoJuvenil2021.Models.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CongregationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("NeedContact")
                        .HasColumnType("bit");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("TikTok")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CongregationId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TeamId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CongresoJuvenil2021.Models.Congregation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direction")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Congregations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direction = "",
                            Name = "Caracas"
                        },
                        new
                        {
                            Id = 2,
                            Direction = "",
                            Name = "Catia La Mar"
                        },
                        new
                        {
                            Id = 3,
                            Direction = "",
                            Name = "Catia"
                        },
                        new
                        {
                            Id = 4,
                            Direction = "",
                            Name = "Las Adjuntas"
                        },
                        new
                        {
                            Id = 5,
                            Direction = "",
                            Name = "Mariches"
                        },
                        new
                        {
                            Id = 6,
                            Direction = "",
                            Name = "Punto Fijo"
                        },
                        new
                        {
                            Id = 7,
                            Direction = "",
                            Name = "Naiguata"
                        },
                        new
                        {
                            Id = 8,
                            Direction = "",
                            Name = "El Junquito"
                        },
                        new
                        {
                            Id = 9,
                            Direction = "",
                            Name = "Puerto la Cruz"
                        },
                        new
                        {
                            Id = 10,
                            Direction = "",
                            Name = "Clarines"
                        },
                        new
                        {
                            Id = 11,
                            Direction = "",
                            Name = "Baruta"
                        },
                        new
                        {
                            Id = 12,
                            Direction = "",
                            Name = "El Hatillo"
                        },
                        new
                        {
                            Id = 13,
                            Direction = "",
                            Name = "Coro"
                        },
                        new
                        {
                            Id = 14,
                            Direction = "",
                            Name = "Guatire"
                        },
                        new
                        {
                            Id = 15,
                            Direction = "",
                            Name = "San Antonio"
                        },
                        new
                        {
                            Id = 16,
                            Direction = "",
                            Name = "Caucagua"
                        },
                        new
                        {
                            Id = 17,
                            Direction = "",
                            Name = "Araira"
                        },
                        new
                        {
                            Id = 18,
                            Direction = "",
                            Name = "Charallave"
                        },
                        new
                        {
                            Id = 19,
                            Direction = "",
                            Name = "Cua"
                        },
                        new
                        {
                            Id = 20,
                            Direction = "",
                            Name = "Ocumare"
                        },
                        new
                        {
                            Id = 21,
                            Direction = "",
                            Name = "Guarenas"
                        },
                        new
                        {
                            Id = 22,
                            Direction = "",
                            Name = "El Rodeo"
                        },
                        new
                        {
                            Id = 23,
                            Direction = "",
                            Name = "Carrizal"
                        },
                        new
                        {
                            Id = 24,
                            Direction = "",
                            Name = "Los Teques"
                        },
                        new
                        {
                            Id = 25,
                            Direction = "",
                            Name = "La Via"
                        },
                        new
                        {
                            Id = 26,
                            Direction = "",
                            Name = "Higuerote"
                        },
                        new
                        {
                            Id = 27,
                            Direction = "",
                            Name = "Rio Chico"
                        },
                        new
                        {
                            Id = 28,
                            Direction = "",
                            Name = "Las Clavellinas"
                        },
                        new
                        {
                            Id = 29,
                            Direction = "",
                            Name = "Juan Griego"
                        },
                        new
                        {
                            Id = 30,
                            Direction = "",
                            Name = "Santa Teresa"
                        },
                        new
                        {
                            Id = 31,
                            Direction = "",
                            Name = "Yare"
                        },
                        new
                        {
                            Id = 32,
                            Direction = "",
                            Name = "Anaco"
                        },
                        new
                        {
                            Id = 33,
                            Direction = "",
                            Name = "Cantaura"
                        },
                        new
                        {
                            Id = 34,
                            Direction = "",
                            Name = "San Diego"
                        },
                        new
                        {
                            Id = 35,
                            Direction = "",
                            Name = "Cumana"
                        },
                        new
                        {
                            Id = 36,
                            Direction = "",
                            Name = "CT Curiepe"
                        },
                        new
                        {
                            Id = 37,
                            Direction = "",
                            Name = "Maracay"
                        },
                        new
                        {
                            Id = 38,
                            Direction = "",
                            Name = "La Victoria"
                        },
                        new
                        {
                            Id = 39,
                            Direction = "",
                            Name = "Guárico"
                        },
                        new
                        {
                            Id = 40,
                            Direction = "",
                            Name = "Biscucuy"
                        },
                        new
                        {
                            Id = 41,
                            Direction = "",
                            Name = "Barquisimeto"
                        },
                        new
                        {
                            Id = 42,
                            Direction = "",
                            Name = " Las Tejerías"
                        },
                        new
                        {
                            Id = 43,
                            Direction = "",
                            Name = "Campo Ameno"
                        },
                        new
                        {
                            Id = 44,
                            Direction = "",
                            Name = "Potreritos"
                        },
                        new
                        {
                            Id = 45,
                            Direction = "",
                            Name = "Chabasquen"
                        },
                        new
                        {
                            Id = 46,
                            Direction = "Barinitas",
                            Name = "Barinitas"
                        },
                        new
                        {
                            Id = 47,
                            Direction = "",
                            Name = "Fundagex(Asociado)"
                        },
                        new
                        {
                            Id = 48,
                            Direction = "",
                            Name = "Valencia"
                        },
                        new
                        {
                            Id = 49,
                            Direction = "",
                            Name = "San Felipe"
                        },
                        new
                        {
                            Id = 50,
                            Direction = "",
                            Name = "Puerto Cabello"
                        },
                        new
                        {
                            Id = 51,
                            Direction = "",
                            Name = "San Carlos"
                        },
                        new
                        {
                            Id = 52,
                            Direction = "",
                            Name = "Maturín"
                        },
                        new
                        {
                            Id = 53,
                            Direction = "",
                            Name = "Punta de Mata"
                        },
                        new
                        {
                            Id = 54,
                            Direction = "",
                            Name = "Temblador"
                        },
                        new
                        {
                            Id = 55,
                            Direction = "",
                            Name = "Ciudad Guayana"
                        },
                        new
                        {
                            Id = 56,
                            Direction = "",
                            Name = "Upata"
                        },
                        new
                        {
                            Id = 57,
                            Direction = "",
                            Name = "Caicara del Orinoco"
                        },
                        new
                        {
                            Id = 58,
                            Direction = "",
                            Name = "Santa Elena de Uairen"
                        },
                        new
                        {
                            Id = 59,
                            Direction = "",
                            Name = "Valera"
                        },
                        new
                        {
                            Id = 60,
                            Direction = "",
                            Name = "San Cristobal"
                        },
                        new
                        {
                            Id = 61,
                            Direction = "",
                            Name = "Mérida"
                        },
                        new
                        {
                            Id = 62,
                            Direction = "",
                            Name = "Maracaibo"
                        },
                        new
                        {
                            Id = 63,
                            Direction = "",
                            Name = "Bachaquero"
                        },
                        new
                        {
                            Id = 64,
                            Direction = "",
                            Name = "Ciudad Ojeda"
                        },
                        new
                        {
                            Id = 65,
                            Direction = "",
                            Name = "Morón"
                        },
                        new
                        {
                            Id = 66,
                            Direction = "",
                            Name = "El Palomar"
                        },
                        new
                        {
                            Id = 67,
                            Direction = "",
                            Name = "Moreno"
                        },
                        new
                        {
                            Id = 68,
                            Direction = "",
                            Name = "Cordoba"
                        },
                        new
                        {
                            Id = 69,
                            Direction = "",
                            Name = "José León Suarez"
                        },
                        new
                        {
                            Id = 70,
                            Direction = "",
                            Name = "Tucumán"
                        },
                        new
                        {
                            Id = 71,
                            Direction = "",
                            Name = "América"
                        },
                        new
                        {
                            Id = 72,
                            Direction = "",
                            Name = "Huanguelen"
                        },
                        new
                        {
                            Id = 73,
                            Direction = "",
                            Name = "Berazategui"
                        },
                        new
                        {
                            Id = 74,
                            Direction = "",
                            Name = "Lanus"
                        },
                        new
                        {
                            Id = 75,
                            Direction = "",
                            Name = "General Alvear"
                        },
                        new
                        {
                            Id = 76,
                            Direction = "",
                            Name = "Ezeiza"
                        },
                        new
                        {
                            Id = 77,
                            Direction = "",
                            Name = "Banda Rio Sali - Tucumán"
                        },
                        new
                        {
                            Id = 78,
                            Direction = "",
                            Name = "Villa Gesell"
                        },
                        new
                        {
                            Id = 79,
                            Direction = "",
                            Name = "Centro Cristiano Restauración(Asociado)"
                        },
                        new
                        {
                            Id = 80,
                            Direction = "",
                            Name = "Fundación Apostólica Jesús te ama(Asociado)"
                        },
                        new
                        {
                            Id = 81,
                            Direction = "",
                            Name = "Encarnación"
                        },
                        new
                        {
                            Id = 82,
                            Direction = "",
                            Name = "Discípulos de Cristo(Asociado)"
                        },
                        new
                        {
                            Id = 83,
                            Direction = "",
                            Name = "Viña del Mar"
                        },
                        new
                        {
                            Id = 84,
                            Direction = "",
                            Name = "Santiago"
                        },
                        new
                        {
                            Id = 85,
                            Direction = "",
                            Name = "Rancagua"
                        },
                        new
                        {
                            Id = 86,
                            Direction = "",
                            Name = "Los Ángeles"
                        },
                        new
                        {
                            Id = 87,
                            Direction = "",
                            Name = "Lautaro"
                        },
                        new
                        {
                            Id = 88,
                            Direction = "",
                            Name = "CT Chumil"
                        },
                        new
                        {
                            Id = 89,
                            Direction = "",
                            Name = "CT Copiapó"
                        },
                        new
                        {
                            Id = 90,
                            Direction = "",
                            Name = "CT Casablanca"
                        },
                        new
                        {
                            Id = 91,
                            Direction = "",
                            Name = "Madrid"
                        },
                        new
                        {
                            Id = 92,
                            Direction = "",
                            Name = "Barranquilla"
                        },
                        new
                        {
                            Id = 93,
                            Direction = "",
                            Name = "Cartagena"
                        },
                        new
                        {
                            Id = 94,
                            Direction = "",
                            Name = "Bogota"
                        },
                        new
                        {
                            Id = 95,
                            Direction = "",
                            Name = "Cúcuta"
                        },
                        new
                        {
                            Id = 96,
                            Direction = "",
                            Name = "Sincelejos"
                        },
                        new
                        {
                            Id = 97,
                            Direction = "",
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = 98,
                            Direction = "",
                            Name = "Panamá"
                        },
                        new
                        {
                            Id = 99,
                            Direction = "",
                            Name = "Lima"
                        },
                        new
                        {
                            Id = 100,
                            Direction = "",
                            Name = "Coatzacoalcos"
                        },
                        new
                        {
                            Id = 101,
                            Direction = "",
                            Name = "Minatitlán"
                        },
                        new
                        {
                            Id = 102,
                            Direction = "",
                            Name = "Leon"
                        },
                        new
                        {
                            Id = 103,
                            Direction = "",
                            Name = "Coatzacoalcos / Minatitlán"
                        },
                        new
                        {
                            Id = 104,
                            Direction = "",
                            Name = "Miami"
                        },
                        new
                        {
                            Id = 105,
                            Direction = "",
                            Name = "Sarasota"
                        },
                        new
                        {
                            Id = 106,
                            Direction = "",
                            Name = "New York"
                        },
                        new
                        {
                            Id = 107,
                            Direction = "",
                            Name = "Ninguna"
                        });
                });

            modelBuilder.Entity("CongresoJuvenil2021.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CongresoJuvenil2021.Models.PodCast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("TransmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PodCasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Link = "#",
                            Name = "Alabanza y adoración",
                            TransmissionDate = new DateTime(2021, 8, 25, 14, 50, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Link = "#",
                            Name = "Vocación, visión, llamado y productividad",
                            TransmissionDate = new DateTime(2021, 8, 25, 15, 50, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Link = "#",
                            Name = "Pandemia de Amor",
                            TransmissionDate = new DateTime(2021, 8, 25, 16, 50, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Link = "#",
                            Name = "Desenmascarando la ideología de género",
                            TransmissionDate = new DateTime(2021, 8, 25, 17, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Link = "#",
                            Name = "Visión, emprendimiento y libertad financiera",
                            TransmissionDate = new DateTime(2021, 8, 26, 14, 50, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Link = "#",
                            Name = "¿Y cómo funciona esto? Especial para novios",
                            TransmissionDate = new DateTime(2021, 8, 26, 15, 55, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Link = "#",
                            Name = "Porque estar solo, nunca será mejor. Especial para solteros",
                            TransmissionDate = new DateTime(2021, 8, 26, 16, 55, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CongresoJuvenil2021.Models.PodCastUser", b =>
                {
                    b.Property<int>("PodCastId")
                        .HasColumnType("int");

                    b.Property<long>("AppUserId")
                        .HasColumnType("bigint");

                    b.HasKey("PodCastId", "AppUserId");

                    b.HasIndex("AppUserId");

                    b.ToTable("PodCastUsers");
                });

            modelBuilder.Entity("CongresoJuvenil2021.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Link = "https://t.me/joinchat/HZegqf-GylxlMWUx",
                            Name = "M-1 MOXAGUILAS"
                        },
                        new
                        {
                            Id = 2,
                            Link = "https://t.me/joinchat/WHUPm1WLCWZjYjAx",
                            Name = "M-2 Manada Divergente"
                        },
                        new
                        {
                            Id = 3,
                            Link = "https://t.me/joinchat/BmGdsXc_nUU1OTNh",
                            Name = "M-3 LEGENDARIOS"
                        },
                        new
                        {
                            Id = 4,
                            Link = "https://t.me/joinchat/cdnPblmq7C0wMzVh",
                            Name = "M-4 JUVENTUD DIVERGENTE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ConcurrencyStamp = "1209d965-96f4-4402-8f9a-991e6964728a",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2L,
                            ConcurrencyStamp = "1209d965-96f4-4402-8f9a-991e6964728a",
                            Name = "Lider Equipo",
                            NormalizedName = "LIDER EQUIPO"
                        },
                        new
                        {
                            Id = 3L,
                            ConcurrencyStamp = "1209d965-96f4-4402-8f9a-991e6964728a",
                            Name = "Coordinador MOXA",
                            NormalizedName = "COORDINADOR MOXA"
                        },
                        new
                        {
                            Id = 4L,
                            ConcurrencyStamp = "1209d965-96f4-4402-8f9a-991e6964728a",
                            Name = "Coordinador Congreso",
                            NormalizedName = "Coordinador Congreso"
                        },
                        new
                        {
                            Id = 5L,
                            ConcurrencyStamp = "1209d965-96f4-4402-8f9a-991e6964728a",
                            Name = "Participante",
                            NormalizedName = "Participante"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("CongresoJuvenil2021.Models.AppUser", b =>
                {
                    b.HasOne("CongresoJuvenil2021.Models.Congregation", "Congregation")
                        .WithMany()
                        .HasForeignKey("CongregationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CongresoJuvenil2021.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("CongresoJuvenil2021.Models.PodCastUser", b =>
                {
                    b.HasOne("CongresoJuvenil2021.Models.AppUser", "AppUser")
                        .WithMany("PodCasts")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CongresoJuvenil2021.Models.PodCast", "PodCast")
                        .WithMany("Users")
                        .HasForeignKey("PodCastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<long>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.HasOne("CongresoJuvenil2021.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.HasOne("CongresoJuvenil2021.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<long>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CongresoJuvenil2021.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.HasOne("CongresoJuvenil2021.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
